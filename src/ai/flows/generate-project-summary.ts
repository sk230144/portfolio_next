// This file is generated by Gemini.

'use server';

/**
 * @fileOverview Generates a concise and engaging project summary based on the project title and technologies used.
 *
 * - generateProjectSummary - A function that generates the project summary.
 * - GenerateProjectSummaryInput - The input type for the generateProjectSummary function.
 * - GenerateProjectSummaryOutput - The return type for the generateProjectSummary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateProjectSummaryInputSchema = z.object({
  title: z.string().describe('The title of the project.'),
  tech: z.array(z.string()).describe('An array of technologies used in the project.'),
});
export type GenerateProjectSummaryInput = z.infer<typeof GenerateProjectSummaryInputSchema>;

const GenerateProjectSummaryOutputSchema = z.object({
  summary: z.string().describe('A concise and engaging summary of the project.'),
  progress: z.string().describe('Progress of generating project summary.'),
});
export type GenerateProjectSummaryOutput = z.infer<typeof GenerateProjectSummaryOutputSchema>;

export async function generateProjectSummary(input: GenerateProjectSummaryInput): Promise<GenerateProjectSummaryOutput> {
  return generateProjectSummaryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateProjectSummaryPrompt',
  input: {schema: GenerateProjectSummaryInputSchema},
  output: {schema: GenerateProjectSummaryOutputSchema},
  prompt: `You are an expert at writing concise and engaging project summaries for developer portfolios.

  Given the project title and the technologies used, generate a one-sentence summary that highlights the key features and benefits of the project.

  Title: {{{title}}}
  Technologies Used: {{#each tech}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}
  `,
});

const generateProjectSummaryFlow = ai.defineFlow(
  {
    name: 'generateProjectSummaryFlow',
    inputSchema: GenerateProjectSummaryInputSchema,
    outputSchema: GenerateProjectSummaryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return {
      ...output!,
      progress: 'Generated a concise and engaging project summary based on the project title and technologies used.',
    };
  }
);
